"""InitialMigration

Revision ID: c2b5404b05d6
Revises: 
Create Date: 2022-07-02 20:51:22.386975

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'c2b5404b05d6'
down_revision = None
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('capex_budget_lines',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('code', sa.String(), nullable=False),
    sa.Column('total_amount', sa.Float(), nullable=False),
    sa.Column('active', sa.Boolean(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('cost_center',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('cost_center', sa.String(), nullable=False),
    sa.Column('active', sa.Boolean(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('decision_support_feedback',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('active', sa.Boolean(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('foreign_currency',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('rate_to_egp', sa.Float(), nullable=False),
    sa.Column('active', sa.Boolean(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('opex_account_lines',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('code', sa.String(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('amount', sa.Float(), nullable=True),
    sa.Column('active', sa.Boolean(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('procurement_feedback',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('active', sa.Boolean(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('product_type',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('active', sa.Boolean(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('status',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('active', sa.Boolean(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('supplier',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=True),
    sa.Column('active', sa.Boolean(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('supply_chain_feedback',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('active', sa.Boolean(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('users',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('username', sa.String(), nullable=False),
    sa.Column('orange_id', sa.Integer(), nullable=True),
    sa.Column('password', sa.String(), nullable=False),
    sa.Column('first_name', sa.String(), nullable=True),
    sa.Column('last_name', sa.String(), nullable=True),
    sa.Column('title', sa.String(), nullable=True),
    sa.Column('email', sa.String(), nullable=False),
    sa.Column('profile_picture', sa.LargeBinary(), nullable=True),
    sa.Column('profile_picture_mimetype', sa.Text(), nullable=True),
    sa.Column('phone', sa.String(), nullable=False),
    sa.Column('is_integration_engineer', sa.Boolean(), nullable=False),
    sa.Column('is_audit', sa.Boolean(), nullable=False),
    sa.Column('is_manager', sa.Boolean(), nullable=False),
    sa.Column('is_admin', sa.Boolean(), nullable=False),
    sa.Column('is_super_user', sa.Boolean(), nullable=False),
    sa.Column('active', sa.Boolean(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email'),
    sa.UniqueConstraint('orange_id'),
    sa.UniqueConstraint('username')
    )
    op.create_table('department',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(), nullable=True),
    sa.Column('cost_center_id', sa.Integer(), nullable=False),
    sa.Column('active', sa.Boolean(), nullable=False),
    sa.ForeignKeyConstraint(['cost_center_id'], ['cost_center.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('iec',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('project_title', sa.String(), nullable=False),
    sa.Column('project_description', sa.String(), nullable=False),
    sa.Column('justification', sa.String(), nullable=False),
    sa.Column('request_date', sa.DateTime(), nullable=False),
    sa.Column('start_date', sa.DateTime(), nullable=True),
    sa.Column('iec_date', sa.DateTime(), nullable=True),
    sa.Column('attachment', sa.LargeBinary(), nullable=True),
    sa.Column('finance_number', sa.Integer(), nullable=False),
    sa.Column('comment', sa.String(), nullable=False),
    sa.Column('supply_chain_feedback_detailed', sa.String(), nullable=True),
    sa.Column('procurement_feedback_detailed', sa.String(), nullable=True),
    sa.Column('decision_support_feedback_detailed', sa.String(), nullable=True),
    sa.Column('capex_egp', sa.Float(), nullable=True),
    sa.Column('opex_egp', sa.Float(), nullable=True),
    sa.Column('total_egp', sa.Float(), nullable=True),
    sa.Column('status_id', sa.Integer(), nullable=False),
    sa.Column('supply_chain_feedback_id', sa.Integer(), nullable=False),
    sa.Column('procurement_feedback_id', sa.Integer(), nullable=False),
    sa.Column('decision_support_feedback_id', sa.Integer(), nullable=False),
    sa.Column('is_annual', sa.Boolean(), nullable=False),
    sa.Column('number_of_years', sa.Integer(), nullable=False),
    sa.Column('active', sa.Boolean(), nullable=False),
    sa.ForeignKeyConstraint(['decision_support_feedback_id'], ['decision_support_feedback.id'], ),
    sa.ForeignKeyConstraint(['procurement_feedback_id'], ['procurement_feedback.id'], ),
    sa.ForeignKeyConstraint(['status_id'], ['status.id'], ),
    sa.ForeignKeyConstraint(['supply_chain_feedback_id'], ['supply_chain_feedback.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('owner',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=True),
    sa.Column('department_id', sa.Integer(), nullable=False),
    sa.Column('active', sa.Boolean(), nullable=False),
    sa.ForeignKeyConstraint(['department_id'], ['department.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('procurement_order',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('comment', sa.String(), nullable=False),
    sa.Column('date', sa.DateTime(), nullable=False),
    sa.Column('status_id', sa.Integer(), nullable=False),
    sa.Column('iec_id', sa.Integer(), nullable=False),
    sa.Column('active', sa.Boolean(), nullable=False),
    sa.ForeignKeyConstraint(['iec_id'], ['iec.id'], ),
    sa.ForeignKeyConstraint(['status_id'], ['status.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('procurement_request',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('comment', sa.String(), nullable=False),
    sa.Column('date', sa.DateTime(), nullable=False),
    sa.Column('status_id', sa.Integer(), nullable=False),
    sa.Column('iec_id', sa.Integer(), nullable=False),
    sa.Column('supplier_id', sa.Integer(), nullable=False),
    sa.Column('active', sa.Boolean(), nullable=False),
    sa.ForeignKeyConstraint(['iec_id'], ['iec.id'], ),
    sa.ForeignKeyConstraint(['status_id'], ['status.id'], ),
    sa.ForeignKeyConstraint(['supplier_id'], ['supplier.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('iec_dep_type',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('description', sa.String(), nullable=False),
    sa.Column('final_rate', sa.Float(), nullable=True),
    sa.Column('is_foreign_currency', sa.Boolean(), nullable=False),
    sa.Column('is_capex', sa.Boolean(), nullable=False),
    sa.Column('capex_egp', sa.Float(), nullable=True),
    sa.Column('is_opex', sa.Boolean(), nullable=False),
    sa.Column('opex_egp', sa.Float(), nullable=True),
    sa.Column('total', sa.Float(), nullable=True),
    sa.Column('iec_id', sa.Integer(), nullable=False),
    sa.Column('foreign_currency_id', sa.Integer(), nullable=False),
    sa.Column('owner_id', sa.Integer(), nullable=True),
    sa.Column('product_type_id', sa.Integer(), nullable=False),
    sa.Column('need_realocation_PR', sa.Boolean(), nullable=False),
    sa.Column('need_realocation_PO', sa.Boolean(), nullable=False),
    sa.Column('active', sa.Boolean(), nullable=False),
    sa.ForeignKeyConstraint(['foreign_currency_id'], ['foreign_currency.id'], ),
    sa.ForeignKeyConstraint(['iec_id'], ['iec.id'], ),
    sa.ForeignKeyConstraint(['owner_id'], ['owner.id'], ),
    sa.ForeignKeyConstraint(['product_type_id'], ['product_type.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('iec_dep_type')
    op.drop_table('procurement_request')
    op.drop_table('procurement_order')
    op.drop_table('owner')
    op.drop_table('iec')
    op.drop_table('department')
    op.drop_table('users')
    op.drop_table('supply_chain_feedback')
    op.drop_table('supplier')
    op.drop_table('status')
    op.drop_table('product_type')
    op.drop_table('procurement_feedback')
    op.drop_table('opex_account_lines')
    op.drop_table('foreign_currency')
    op.drop_table('decision_support_feedback')
    op.drop_table('cost_center')
    op.drop_table('capex_budget_lines')
    # ### end Alembic commands ###
